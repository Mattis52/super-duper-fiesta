eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgcmVzdG9yZS1jYWNoZToKICAgIGltYWdlOiBkcmlsbHN0ZXIvZHJvbmUtdm9sdW1lLWNhY2hlCiAgICB3aGVuOgogICAgICBldmVudDogcHVsbF9yZXF1ZXN0CiAgICByZXN0b3JlOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAuL25vZGVfbW9kdWxlcwogICAgdm9sdW1lczoKICAgICAgLSAvdG1wL2NhY2hlOi9jYWNoZQogIHJlYnVpbGQtY2FjaGU6CiAgICBpbWFnZTogZHJpbGxzdGVyL2Ryb25lLXZvbHVtZS1jYWNoZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1bGxfcmVxdWVzdAogICAgcmVidWlsZDogdHJ1ZQogICAgbW91bnQ6CiAgICAgIC0gLi9ub2RlX21vZHVsZXMKICAgIHZvbHVtZXM6CiAgICAgIC0gL3RtcC9jYWNoZTovY2FjaGUKCiAgdGVzdDoKICAgIGltYWdlOiBub2RlOmJvcm9uCiAgICBlbnZpcm9ubWVudDoKICAgICAgU0RGX0RBVEFCQVNFX1VSTDogIm1vbmdvZGI6Ly8xMjcuMC4wLjE6MjcwMTciCiAgICB3aGVuOgogICAgICBldmVudDogcHVsbF9yZXF1ZXN0CiAgICBjb21tYW5kczoKICAgICAgLSBucG0gaW5zdGFsbCAtLWRlcHRoPTAgLS1xdWlldAogICAgICAtIG5wbSBydW4gYnVpbGQ6cHJvZAogICAgICAtIG5wbSBydW4gbGludAogIAogIGJ1aWxkOgogICAgaW1hZ2U6IGRvY2tlcgogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdSAkRE9DS0VSX1JFR0lTVFJZX1VTRVJOQU1FIC1wICRET0NLRVJfUkVHSVNUUllfUEFTU1dPUkQgcmVnaXN0cnkub25saW5lLm50bnUubm8KICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcmVnaXN0cnkub25saW5lLm50bnUubm8vZG90a29tL3N1cGVyLWR1cGVyLWZpZXN0YSAtZiBEb2NrZXJmaWxlLnByb2QgLgogICAgICAtIGRvY2tlciBwdXNoIHJlZ2lzdHJ5Lm9ubGluZS5udG51Lm5vL2RvdGtvbS9zdXBlci1kdXBlci1maWVzdGE6bGF0ZXN0CiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCgogIGRlcGxveToKICAgIGltYWdlOiBwbHVnaW5zL3NzaAogICAgaG9zdDogbmFuc2VuLm9ubGluZS5udG51Lm5vCiAgICBwb3J0OiAyMgogICAgdXNlcjogcm9vdAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKICAgIHNjcmlwdDoKICAgICAgLSAvYmluL3N5c3RlbWN0bCByZXN0YXJ0IHN1cGVyLWR1cGVyLWZpZXN0YS5zZXJ2aWNlCgpzZXJ2aWNlczoKICBtb25nbzoKICAgIGltYWdlOiBtb25nbzpsYXRlc3QKICAgIHBvcnRzOgogICAgICAtICIyNzAxNzoyNzAxNyIK.eTLF0LGS3ARXwSpFnFTqjp1QAhrZSxldQBimUIb4-ws